{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.1", "generated_at": "2024-05-31T08:40:20.522129Z", "invocation_id": "79da83e5-e7f2-43cd-8fec-2cd48d5f482d", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-31T08:40:20.367144Z", "completed_at": "2024-05-31T08:40:20.397898Z"}, {"name": "execute", "started_at": "2024-05-31T08:40:20.398495Z", "completed_at": "2024-05-31T08:40:20.499715Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.13435673713684082, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.pizzasale_analytics.stg_pizzasales", "compiled": true, "compiled_code": "-- the idea is to have a source of our data\n-- thus i am going to select everything from table in postgres\n-- i will use this as a source for the other models\n\n\n\n-- create a cte for selecting all the data from the table in the db\n\nwith stg_pizza_sales as (\n    select\n        -- first i create a surrogate key that is going to uniquely identify my records\n        md5(cast(coalesce(cast(pizza_id as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as pizzaid,\n\n        -- gonna work on identifiers first, ensuring they are correctly casted\n        -- we have pizza_id, order_id\n\n        \n    \n    cast(pizza_id as integer)\n as pizza_id,\n        \n    \n    cast(order_id as integer)\n as order_id,\n\n        -- working on the other attributes\n        pizza_name_id as pizza_name_id,\n        \n    \n    cast(quantity as integer)\n as quantity,\n        cast(order_date as timestamp) as order_date,\n        cast(order_time as timestamp) as order_time,\n        cast(unit_price as numeric) as unit_price,\n        cast(total_price as numeric) as total_price,\n        pizza_size,\n        pizza_category,\n        pizza_ingredients,\n        pizza_name\n    from \"pizza_sales\".\"public\".\"pizzasales\"\n)\n\nselect\n    *\nfrom stg_pizza_sales", "relation_name": "\"pizza_sales\".\"public\".\"stg_pizzasales\""}], "elapsed_time": 0.2564270496368408, "args": {"cache_selected_only": false, "log_level": "info", "use_colors_file": true, "macro_debugging": false, "exclude": [], "print": true, "invocation_command": "dbt run", "log_path": "/home/ahona/Desktop/dataEng/analytics/pizzasale_analytics/logs", "send_anonymous_usage_stats": true, "require_resource_names_without_spaces": false, "use_colors": true, "version_check": true, "write_json": true, "strict_mode": false, "populate_cache": true, "log_file_max_bytes": 10485760, "empty": false, "profiles_dir": "/home/ahona/.dbt", "select": [], "defer": false, "favor_state": false, "log_format_file": "debug", "log_format": "default", "project_dir": "/home/ahona/Desktop/dataEng/analytics/pizzasale_analytics", "which": "run", "partial_parse": true, "partial_parse_file_diff": true, "show_resource_report": false, "indirect_selection": "eager", "vars": {}, "printer_width": 80, "quiet": false, "warn_error_options": {"include": [], "exclude": []}, "require_explicit_package_overrides_for_builtin_materializations": true, "source_freshness_run_project_hooks": false, "introspect": true, "static_parser": true, "log_level_file": "debug", "enable_legacy_logger": false}}